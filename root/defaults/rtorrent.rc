# Prepare rtorrent communication socket
execute = {sh,-c,/usr/bin/php7 /usr/share/webapps/rutorrent/php/initplugins.php abc &}
execute.nothrow = rm,/run/php/.rtorrent.sock
network.scgi.open_local = /run/php/.rtorrent.sock
schedule = socket_chmod,0,0,"execute=chmod,0660,/run/php/.rtorrent.sock"
schedule = socket_chgrp,0,0,"execute=chgrp,abc,/run/php/.rtorrent.sock"

log.open_file = "rtorrent", /config/log/rtorrent/rtorrent.log
log.add_output = "info", "rtorrent"
#log.add_output = "thread_info", "rtorrent"
#log.add_output = "torrent_info", "rtorrent"
#log.add_output = "socket_info", "rtorrent"

# General Parameters
pieces.hash.on_completion.set = yes
dht.mode.set = auto
dht.port = 6881
protocol.pex.set = yes
encoding_list = UTF-8
# system.umask.set = 022
session.path.set = /config/rtorrent/rtorrent_sess
directory.default.set = /processing/


# Network parameters
#pieces.memory.max.set = 4096M
#throttle.max_downloads.global.set = 0
#throttle.max_uploads.global.set = 0
trackers.use_udp.set = yes
network.port_random.set = no
network.port_range.set = 51413-51413
network.bind_address.set = 0.0.0.0
encryption = allow_incoming,try_outgoing,enable_retry
# network.http.ssl_verify_peer.set=0

# Preallocate files; reduces defragmentation on filesystems.
system.file.allocate.set = yes

# tuning parameters
pieces.preload.type.set = 1
# Global upload and download rate in KiB, `0` for unlimited (`download_rate`, `upload_rate`)
throttle.global_down.max_rate.set_kb = 4000
throttle.global_up.max_rate.set_kb   = 4000
# Maximum number of simultaneous downloads and uploads slots (global slots!) (`max_downloads_global`, `max_uploads_global`)
throttle.max_downloads.global.set = 300
throttle.max_uploads.global.set   = 300
# Maximum and minimum number of peers to connect to per torrent while downloading (`min_peers`, `max_peers`) Default: `100` and `200` respectively
throttle.min_peers.normal.set = 99
throttle.max_peers.normal.set = 100
# Same as above but for seeding completed torrents (seeds per torrent), `-1` for same as downloading (`min_peers_seed`, `max_peers_seed`) Default: `-1` for both
throttle.min_peers.seed.set = -1
throttle.max_peers.seed.set = -1
# Maximum number of simultaneous downloads and uploads slots per torrent (`max_uploads`) Default: `50` for both
throttle.max_downloads.set = 50
throttle.max_uploads.set = 50
# Set the numwant field sent to the tracker, which indicates how many peers we want.
#  A negative value disables this feature. Default: `-1` (`tracker_numwant`)
trackers.numwant.set = 100
# Maximum number of connections rtorrent can accept/make (`sockets`)
network.max_open_sockets.set = 999
# Maximum number of open files rtorrent can keep open (you have to modify the system wide settings with ulimit!) (`set_max_open_files`)
network.max_open_files.set = 600

# Tracker settings
# Adding public DHT servers for easy bootstrapping
schedule2 = dht_node_1, 5, 0, "dht.add_node=router.utorrent.com:6881"
schedule2 = dht_node_2, 5, 0, "dht.add_node=dht.transmissionbt.com:6881"
schedule2 = dht_node_3, 5, 0, "dht.add_node=router.bitcomet.com:6881"
schedule2 = dht_node_4, 5, 0, "dht.add_node=dht.aelitis.com:6881"

# Enable the default ratio group.
ratio.enable=
# Change the limits, the defaults should be sufficient.
ratio.min.set=0
ratio.max.set=1
ratio.upload.set=1b

# Stop seeding when .torrent from watch file is deleted
#schedule = untied_directory,5,5,stop_untied=

# Pause torrents when free space is only 1GB
schedule = low_diskspace,5,60,close_low_diskspace=1024M

# Commit session data
schedule = session_save,240,300,session_save=




# Move complete and delete torrent.
#method.insert = d.label_download_dir, simple, "cat=/downloads/, (d.custom1)"
#method.insert = d.data_full_path, simple, "branch=((d.is_multi_file)),((cat,(d.directory))),((cat,(d.directory),/,(d.name)))"
#method.insert = d.move_to_complete, simple, "d.directory.set=$argument.1=; execute=mkdir,-p,$argument.1=; execute=mv,$argument.0=,$argument.1=; d.save_full_session="
#method.set_key = event.download.finished,move_complete,"d.move_to_complete=$d.data_full_path=,$d.label_download_dir=; d.stop=;"

# rename torrent after its been added - https://github.com/rakshasa/rtorrent/issues/385
#method.insert = d.meta_basename, simple|string|private, "execute.capture=basename,\"$d.loaded_file=\",.torrent"
#method.insert = d.meta_final_path, simple|string|private, "cat=/config/loaded/,$d.meta_basename=,.torrent"
#method.insert = d.move_meta, simple, "execute=mv,-f,$d.loaded_file=,$d.meta_final_path=;d.loaded_file.set=$d.meta_final_path="
#method.set_key = event.download.inserted_new,move_tor,"d.stop=; d.move_meta=; d.start="

###############################################################################
# Watch directories
###############################################################################
# create a default watch directory
#schedule2 = watch_directory_default, 0, 10, "load.start=/blackhole/*.torrent,d.custom1.set=unsorted"

# Dynamically generated watch directories (added by cont-init.d script):
